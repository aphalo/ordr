% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/format.r
\name{formatting}
\alias{formatting}
\alias{format.tbl_ord}
\alias{print.tbl_ord}
\title{Formatting and printing methods for \code{tbl_ord}s}
\usage{
\method{format}{tbl_ord}(x, ..., n = NULL, width = NULL,
  n_extra = NULL)

\method{print}{tbl_ord}(x, ..., n = NULL, width = NULL,
  n_extra = NULL)
}
\arguments{
\item{x}{An ordination object.}

\item{...}{Additional arguments.}

\item{n}{Number of rows to show. If \code{NULL}, the default, will print all rows
if less than option \code{tibble.print_max}. Otherwise, will print
\code{tibble.print_min} rows.}

\item{width}{Width of text output to generate. This defaults to \code{NULL}, which
means use \code{getOption("tibble.width")} or (if also \code{NULL})
\code{getOption("width")}; the latter displays only the columns that fit on one
screen. You can also set \code{options(tibble.width = Inf)} to override this
default and always print all columns.}

\item{n_extra}{Number of extra columns to print abbreviated information for,
if the width is too small for the entire tibble. If \code{NULL}, the default,
will print information about at most \code{tibble.max_extra_cols} extra columns.}
}
\description{
Formatting and printing methods for \code{tbl_ord}s
}
\details{
The \code{format} and \code{print} methods for class \link[tidygraph:tbl_graph]{"tbl_ord"``] are adapted from those for class ["tbl_df"][tibble::tbl_df] and for class ["tbl_graph"`}.

\strong{Note:} The \code{format()} function is tedius but cannot be easily modularized
without invoking \link{accessors}, \link{annotation}, and \link{augmentation} multiple
times, thereby significantly reducing performance.
}
\examples{
# Regression analysis of Motor Trend design and performance data
mtcars \%>\%
  scale(scale = FALSE) \%>\%
  as.data.frame() \%>\%
  lm(formula = mpg ~ wt + cyl) \%>\%
  as_tbl_ord() \%>\%
  augment() \%>\%
  mutate_u(influence = .wt.res^2) \%>\%
  print() -> mtcars_lm
mtcars_lm \%>\%
  ggbiplot(aes(x = wt, y = cyl, intercept = `(Intercept)`)) +
  geom_u_point(aes(color = influence)) +
  geom_v_vector() +
  geom_v_isolines(axes = 1, by = 5) +
  ggtitle(
    "Weight isolines with data colored by importance",
    "Regressing mpg onto weight and number of cylinders"
  )
# Multidimensional scaling of country differences and regression of attributes
# Reproduce Exhibit 4.2 in Greenacre (2010)
country_differences \%>\%
  cmdscale(k = 2) \%>\%
  as_tbl_ord() \%>\%
  print() -> differences_cmds
differences_plot <- differences_cmds \%>\%
  ggbiplot(aes(x = 1, y = 2, label = .name)) +
  geom_v_text()
differences_plot
# Reproduce Exhibit 4.5 in Greenacre (2010)
lm(country_attributes ~ get_u(differences_cmds)) \%>\%
  as_tbl_ord() \%>\%
  print() -> attributes_fit
differences_plot +
  geom_v_vector(data = attributes_fit) +
  geom_v_text_radiate(data = attributes_fit, hjust = .3)
# Correspondence analysis of Sanderson finches data
finches \%>\%
  ca::ca() \%>\%
  as_tbl_ord() \%>\%
  confer_inertia(.5) \%>\%
  augment() \%>\%
  print() -> finches_ca
finches_ca \%>\%
  ggbiplot(aes(label = .name)) +
  geom_u_text(aes(alpha = .inertia), color = "royalblue3") +
  geom_v_text(aes(alpha = .inertia), color = "darkred") +
  scale_alpha_continuous(range = c(.3, 1), guide = "none") +
  ggtitle(
    "Symmetric CA biplot of the Galapagos island finches",
    "Label opacity encodes row/column inertia"
  )
# Unscaled PCA and two-scaled biplot of Anderson iris data
iris[, -5] \%>\%
  princomp() \%>\%
  as_tbl_ord() \%>\%
  confer_inertia(1) \%>\%
  mutate_u(species = iris$Species) \%>\%
  mutate_v(measure = gsub("\\\\.", " ", tolower(names(iris)[-5]))) \%>\%
  print() -> iris_pca
iris_pca \%>\%
  ggbiplot(aes(color = species), sec.axes = "v", scale.factor = 3) +
  theme_bw() +
  scale_color_brewer(type = "qual", palette = 2) +
  geom_u_point() +
  geom_v_vector(color = "#444444") +
  geom_v_text_radiate(aes(label = measure), color = "#444444") +
  ggtitle(
    "Row-principal unscaled PCA biplot of Anderson iris data",
    "Variable loadings scaled to secondary axes"
  )
# Linear discriminant analysis of Reaven & Miller diabetes data
head(heplots::Diabetes)
diabetes_lda <- MASS::lda(group ~ ., heplots::Diabetes)
print(diabetes_lda)
as_tbl_ord(diabetes_lda) \%>\%
  augment() \%>\%
  mutate_u(discriminant = ifelse(! .supplement, "centroid", "case")) \%>\%
  print() -> diabetes_lda
ggbiplot(diabetes_lda) +
  theme_bw() +
  geom_u_point(aes(shape = .grouping, size = discriminant), alpha = .5) +
  geom_v_axis(color = "#888888") +
  ggtitle("Column-standardized LDA biplot of Reaven & Miller diabetes data")
diabetes_lda \%>\%
  confer_inertia("symmetric") \%>\%
  ggbiplot(.supplement = FALSE) +
  theme_bw() +
  geom_u_point(aes(shape = .grouping)) +
  geom_v_axis(color = "#888888") +
  geom_v_axis_ticks() +
  geom_v_axis_text(size = 2.5, label_dodge = .025) +
  ggtitle("Symmetric LDA biplot of Reaven & Miller diabetes data")
}
