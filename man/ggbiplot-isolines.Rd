% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geom-isolines.r
\docType{data}
\name{ggbiplot-isolines}
\alias{ggbiplot-isolines}
\alias{GeomTicks}
\alias{geom_u_ticks}
\alias{geom_v_ticks}
\alias{geom_biplot_ticks}
\alias{GeomIsolines}
\alias{geom_u_isolines}
\alias{geom_v_isolines}
\alias{geom_biplot_isolines}
\title{Render isolines for a subject or variable}
\format{An object of class \code{GeomTicks} (inherits from \code{GeomSegment}, \code{Geom}, \code{ggproto}, \code{gg}) of length 4.}
\usage{
geom_u_ticks(mapping = NULL, data = NULL, stat = "identity",
  position = "identity", family = NULL, ids = 1L, by = 1,
  ticks.length = 0.05, ..., na.rm = FALSE, show.legend = NA,
  inherit.aes = TRUE)

geom_v_ticks(mapping = NULL, data = NULL, stat = "identity",
  position = "identity", family = NULL, ids = 1L, by = 1,
  ticks.length = 0.05, ..., na.rm = FALSE, show.legend = NA,
  inherit.aes = TRUE)

geom_biplot_ticks(mapping = NULL, data = NULL, stat = "identity",
  position = "identity", .matrix = "v", family = NULL, ids = 1L,
  by = 1, ticks.length = 0.05, ..., na.rm = FALSE,
  show.legend = NA, inherit.aes = TRUE)

geom_u_isolines(mapping = NULL, data = NULL, stat = "identity",
  position = "identity", family = NULL, ids = 1L, by = 1, ...,
  na.rm = FALSE, show.legend = NA, inherit.aes = TRUE)

geom_v_isolines(mapping = NULL, data = NULL, stat = "identity",
  position = "identity", family = NULL, ids = 1L, by = 1, ...,
  na.rm = FALSE, show.legend = NA, inherit.aes = TRUE)

geom_biplot_isolines(mapping = NULL, data = NULL, stat = "identity",
  position = "identity", .matrix = "v", family = NULL, ids = 1L,
  by = 1, ..., na.rm = FALSE, show.legend = NA, inherit.aes = TRUE)
}
\arguments{
\item{mapping}{Set of aesthetic mappings created by \code{\link[=aes]{aes()}} or
\code{\link[=aes_]{aes_()}}. If specified and \code{inherit.aes = TRUE} (the
default), it is combined with the default mapping at the top level of the
plot. You must supply \code{mapping} if there is no plot mapping.}

\item{data}{The data to be displayed in this layer. There are three
options:

If \code{NULL}, the default, the data is inherited from the plot
data as specified in the call to \code{\link[=ggplot]{ggplot()}}.

A \code{data.frame}, or other object, will override the plot
data. All objects will be fortified to produce a data frame. See
\code{\link[=fortify]{fortify()}} for which variables will be created.

A \code{function} will be called with a single argument,
the plot data. The return value must be a \code{data.frame}, and
will be used as the layer data.}

\item{stat}{The statistical transformation to use on the data for this
layer, as a string.}

\item{position}{Position adjustment, either as a string, or the result of
a call to a position adjustment function.}

\item{family}{A family function or a character string naming one, to
transform the values along the axis at which to render isolines or tick
marks.}

\item{ids}{Row indices of the subjects or variables for which isolines or
tick marks will be rendered.}

\item{by}{Interval length between isolines or tick marks, in the units of the
ordination.}

\item{ticks.length}{Numeric; the length of the tick marks, as a proportion of
the plot width.}

\item{...}{Additional arguments passed to \code{\link[ggplot2:layer]{ggplot2::layer()}}.}

\item{na.rm}{Passed to \code{\link[ggplot2:layer]{ggplot2::layer()}}.}

\item{show.legend}{logical. Should this layer be included in the legends?
\code{NA}, the default, includes if any aesthetics are mapped.
\code{FALSE} never includes, and \code{TRUE} always includes.
It can also be a named logical vector to finely select the aesthetics to
display.}

\item{inherit.aes}{If \code{FALSE}, overrides the default aesthetics,
rather than combining with them. This is most useful for helper functions
that define both data and aesthetics and shouldn't inherit behaviour from
the default plot specification, e.g. \code{\link[=borders]{borders()}}.}

\item{.matrix}{A character string matching one of several indicators for one
or both matrices in a matrix decomposition used for ordination. The
standard values are \code{"u"}, \code{"v"}, and \code{"uv"}.}
}
\description{
\code{geom_*_isolines()} renders isolines for a specified subject or
variable.
}
\section{Biplot layers}{

\code{\link[=ggbiplot]{ggbiplot()}} uses \code{\link[ggplot2:fortify]{ggplot2::fortify()}} internally to produce a single data
frame with a \code{.matrix} column distinguishing the subjects (\code{"u"}) and
variables (\code{"v"}). The stat layers \code{stat_u()} and \code{stat_v()} simply filter
the data frame to one of these two.

The geom layers \code{geom_u_*()} and \code{geom_v_*()} call the corresponding stat in
order to render plot elements for the corresponding matrix \eqn{U} or
\eqn{V}. \code{geom_biplot_*()} selects a default matrix based on common practice,
e.g. \eqn{U} for points and \eqn{V} for arrows.
}

\section{Aesthetics}{

\code{geom_*_isolines()} and \code{geom_*_ticks()} understand the following aesthetics
(required aesthetics are in bold):
\itemize{
\item \strong{\code{x}}
\item \strong{\code{y}}
\item \code{alpha}
\item \code{colour}
\item \code{linetype}
\item \code{size}
\item \code{group}
}
}

\examples{

# standardize the predictors
bioenv_pois <- dplyr::mutate(bioenv, x = scale(Depth), y = scale(Pollution))

# single generalized linear regression setup
(m <- glm(d ~ x + y, "poisson", bioenv_pois))
(b <- as_tbl_ord(m))

# single generalized linear regression biplot
ggbiplot(b, aes(x = x, y = y, label = .name)) +
  theme_bw() +
  geom_u_text(color = "darkgreen") +
  geom_v_vector(color = "brown4") +
  geom_v_text_radiate(color = "brown4")

# reproduce (3.4) and Exhibit 3.6 in Greenacre (2010)

# standardize the predictors and binarize the count responses
bioenv_bin <- dplyr::mutate_at(bioenv, dplyr::vars(a:e), as.logical)
bioenv_bin <- dplyr::mutate(bioenv_bin, x = scale(Depth), y = scale(Pollution))

# multiple generalized linear regression setup
#resp <- as.matrix(dplyr::select(bioenv_std, a:e))
#pred <- as.matrix(dplyr::select(bioenv_std, x = Depth, y = Pollution))
#(m <- glm(resp ~ pred, "binomial"))

# single generalized linear regression setup
(m <- glm(d ~ x + y, "binomial", bioenv_bin))
(b <- as_tbl_ord(m))

# check link function
family(b)$linkfun
family(b)$linkinv
# can/should `family()` be passed through `ggplot()` and on to `geom_*()`?

# single generalized linear regression biplot
# ('intercept' aesthetic is vital for linking GLM parameter to coordinates)
ggbiplot(b, aes(x = x, y = y, intercept = `(Intercept)`, label = .name)) +
  theme_bw() +
  geom_u_text(color = "darkgreen") +
  geom_v_vector(color = "brown4") +
  geom_v_text_radiate(color = "brown4") +
  geom_v_isolines(family = binomial(), by = .05) +
  ylim(c(-2.7, 2.7))
# Regression analysis of Motor Trend design and performance data
mtcars \%>\%
  scale(scale = FALSE) \%>\%
  as.data.frame() \%>\%
  lm(formula = mpg ~ wt + cyl) \%>\%
  as_tbl_ord() \%>\%
  augment() \%>\%
  mutate_u(influence = .wt.res^2) \%>\%
  print() -> mtcars_lm
mtcars_lm \%>\%
  ggbiplot(aes(x = wt, y = cyl)) +
  geom_u_point(aes(color = influence)) +
  geom_v_vector() +
  # weight isolines
  geom_v_isolines(ids = 1, by = 5) +
  ggtitle(
    "Weight isolines with data colored by importance",
    "Regressing mpg onto weight and number of cylinders"
  )
# Adapt Exhibit 2.3 in Greenacre (2010)
bioenv \%>\%
  dplyr::mutate(
    x = (Depth - mean(Depth)) / sd(Depth),
    y = (Pollution - mean(Pollution)) / sd(Pollution)
  ) \%>\%
  lm(formula = d ~ x + y) \%>\%
  as_tbl_ord() \%>\%
  augment() \%>\%
  print() -> bioenv_lm
bioenv_lm \%>\%
  ggbiplot(aes(x = x, y = y, color = .fit, alpha = .wt.res ^ 2)) +
  theme_bw() +
  scale_color_distiller(type = "div", palette = 1) +
  scale_alpha_continuous(range = c(1/3, 1)) +
  geom_u_point() +
  geom_v_vector() +
  geom_v_isolines(ids = 1, by = 5) +
  labs(x = "Standardized Depth", y = "Standardized Pollution") +
  ggtitle(
    "Gradient vector and contour lines for species 'd'",
    "Regression plane: standardized depth-pollution space"
  )
}
\keyword{datasets}
