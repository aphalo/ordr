% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bibble-.r, R/methods-cmds.r, R/methods-lm.r,
%   R/methods-lpca.r
\name{bibble}
\alias{bibble}
\alias{as_bibble}
\alias{as_bibble.bbl}
\alias{make_bibble}
\alias{is_bibble}
\alias{is.bibble}
\alias{as_bibble.cmds}
\alias{as_bibble.lm}
\alias{as_bibble.lpca}
\alias{as_bibble.lsvd}
\title{A unified ordination object class}
\usage{
as_bibble(x)

\method{as_bibble}{bbl}(x)

make_bibble(u = NULL, v = NULL, ...)

is_bibble(x)

is.bibble(x)

\method{as_bibble}{cmds}(x)

\method{as_bibble}{lm}(x)

\method{as_bibble}{lpca}(x)

\method{as_bibble}{lsvd}(x)
}
\arguments{
\item{x}{An ordination object.}

\item{u, v}{Matrices to be used as factors of a bibble.}

\item{...}{Additional elements of a custom bibble.}
}
\description{
These functions wrap ordination objects in the \code{"bbl"} ("bibble") class,
create bibbles directly from matrices, and test for the class and basic
structure.
}
\details{
The \code{"bbl"} ("bibble") class wraps around a range of ordination classes,
making available a suite of ordination tools that specialize to each original
object class, including \code{\link{format}} and \code{\link{fortify}}, which
facilitate the \code{\link{print}} method and the \code{\link{ggbiplot}}
function.

No default method is provided for \code{as_bibble}, despite most defined 
methods being equivalent (simply adding \code{"bbl"} to the vector of object 
classes). This prevents objects for which other methods are not defined from 
being re-classed as bibbles.

The function \code{make_bibble} creates a bibble structured as a list of two 
matrices, \code{u} and \code{v}, which must have the same number of columns 
and the same column names.

\code{is_bibble} checks an object \code{x} for the \code{"bbl"} class and for
consistency between \code{get_coord(x)} and the columns of \code{get_u(x)} 
and \code{get_v(x)}, using the functions at \code{\link{bibble-factors}}.
}
\examples{
# reproduce Exhibit 2.3 in Greenacre (2010)

data(bioenv)
# standardize two predictors
bioenv <- dplyr::mutate(
  bioenv,
  x = (Depth - mean(Depth)) / sd(Depth),
  y = (Pollution - mean(Pollution)) / sd(Pollution)
)

# linear regression setup
(m <- lm(data = bioenv, formula = d ~ x + y))
(b <- as_bibble(m))
(d <- fortify(b))

# basic linear regression biplot
gg <- ggbiplot(b, aes(x = x, y = y))
gg +
  geom_u_point() +
  geom_v_vector()
# same biplot using default matrices for each layer
gg +
  geom_biplot_point() +
  geom_biplot_vector()
# same biplot with isolines for sole axis
gg +
  geom_u_point() +
  geom_v_vector() +
  geom_v_isolines(ids = 1, by = 5)

# shade points by expected species prevalence and darken outliers
ggbiplot(d, aes(x = x, y = y, color = .fitted, alpha = .resid^2)) +
  theme_bw() +
  scale_color_distiller(type = "div", palette = 1) +
  scale_alpha_continuous(range = c(1/3, 1)) +
  geom_u_point() +
  geom_v_vector() +
  geom_v_isolines(ids = 1, by = 5)

data(finches)

finches_mat <- as.matrix(dplyr::select(finches, -Island))
rownames(finches_mat) <- finches$Island

finches_lsvd <- as_bibble(logisticSVD(finches_mat))
# ILLUSTRATE ROLE-REVERSAL BETWEEN U AND V
ggbiplot(finches_lsvd, aes(x = LSC1, y = LSC2)) +
  geom_u_vector(aes(x = LSC1 * .01, y = LSC2 * .01)) +
  geom_u_text(aes(x = LSC1 * .01, y = LSC2 * .01, label = .name), size = 3) +
  geom_v_label(aes(label = .name), size = 3, alpha = .5)

finches_lpca <- as_bibble(logisticPCA(finches_mat))
ggbiplot(finches_lpca, aes(x = LPC1, y = LPC2)) +
  geom_u_vector(aes(x = LPC1 * .01, y = LPC2 * .01)) +
  geom_u_text(aes(x = LPC1 * .01, y = LPC2 * .01, label = .name), size = 3) +
  geom_v_label(aes(label = .name), size = 3, alpha = .5)
}
