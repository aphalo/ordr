% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/methods-nipals.r
\name{methods-nipals}
\alias{methods-nipals}
\alias{as_tbl_ord.nipals}
\alias{reconstruct.nipals}
\alias{recover_u.nipals}
\alias{recover_v.nipals}
\alias{recover_inertia.nipals}
\alias{recover_coord.nipals}
\alias{recover_conference.nipals}
\alias{augmentation_u.nipals}
\alias{augmentation_v.nipals}
\alias{augmentation_coord.nipals}
\title{Functionality for non-linear iterative PLS ('nipals') objects}
\usage{
\method{as_tbl_ord}{nipals}(x)

\method{reconstruct}{nipals}(x)

\method{recover_u}{nipals}(x)

\method{recover_v}{nipals}(x)

\method{recover_inertia}{nipals}(x)

\method{recover_coord}{nipals}(x)

\method{recover_conference}{nipals}(x)

\method{augmentation_u}{nipals}(x)

\method{augmentation_v}{nipals}(x)

\method{augmentation_coord}{nipals}(x)
}
\arguments{
\item{x}{An ordination object.}
}
\description{
These methods extract data from, and attribute new data to,
objects of class \code{"nipals"} as returned by \code{\link[ade4:nipals]{ade4::nipals()}}.
}
\examples{
# Confer PCA weights and inertia between cases and variables
country_attributes \%>\%
  prcomp() \%>\%
  as_tbl_ord() \%>\%
  print() -> attributes_pca
# form biplot
attributes_pca \%>\%
  ggbiplot(
    aes(label = .name),
    sec.axes = "v", scale.factor = dim_v(attributes_pca)
  ) +
  theme_bw() + theme(panel.grid = element_blank()) +
  geom_u_text(aes(x = PC1, y = PC2), color = "seagreen") +
  geom_v_vector(aes(x = PC1, y = PC2), color = "darkred") +
  geom_v_text(
    aes(x = PC1, y = PC2),
    color = "darkred", hjust = "outward", vjust = "outward"
  )
# covariance biplot
attributes_pca \%>\%
  confer_inertia(0) \%>\%
  ggbiplot(
    aes(label = .name),
    sec.axes = "u", scale.factor = dim_u(attributes_pca)
  ) +
  theme_bw() + theme(panel.grid = element_blank()) +
  geom_u_text(aes(x = PC1, y = PC2), color = "seagreen") +
  geom_v_vector(aes(x = PC1, y = PC2), color = "darkred") +
  geom_v_text_repel(aes(x = PC1, y = PC2), color = "darkred")
# Scaled PCA of Anderson iris data with annotated biplot
iris[, -5] \%>\%
  prcomp(scale = TRUE) \%>\%
  as_tbl_ord() \%>\%
  confer_inertia(1) \%>\%
  mutate_u(species = iris$Species) \%>\%
  print() -> iris_pca
iris_pca \%>\%
  ggbiplot(aes(color = species)) +
  theme_bw() +
  scale_color_brewer(type = "qual", palette = 2) +
  geom_u_point(alpha = .5) +
  stat_u_center(fun.center = "mean", size = 3, shape = "triangle") +
  stat_u_ellipse(level = .99) +
  geom_v_vector(color = "#444444") +
  ggtitle(
    "Row-principal PCA biplot of Anderson iris data",
    "Overlaid with centroids and 99\% confidence ellipses"
  )
iris_pca \%>\%
  ggbiplot(aes(color = species)) +
  theme_bw() +
  geom_u_point() +
  stat_u_center(fun.center = "mean", size = 3, shape = 1) +
  geom_polygon(
    aes(fill = species),
    color = NA, alpha = .25, stat = "u_ellipse"
  ) +
  geom_v_vector(color = "#444444") +
  scale_color_brewer(
    type = "qual", palette = 2,
    aesthetics = c("color", "fill")
  ) +
  ggtitle(
    "Row-principal PCA biplot of Anderson iris data",
    "Overlaid with 99\% confidence disks"
  )
# Scaled PCA of Anderson iris data with ranges and confidence intervals
iris[, -5] \%>\%
  prcomp(scale = TRUE) \%>\%
  as_tbl_ord() \%>\%
  confer_inertia(1) \%>\%
  mutate_u(species = iris$Species) \%>\%
  print() -> iris_pca
iris_pca \%>\%
  ggbiplot(aes(color = species)) +
  theme_bw() +
  scale_color_brewer(type = "qual", palette = 2) +
  geom_u_lineranges(fun.data = mean_sdl, size = .75) +
  geom_u_point(alpha = .5) +
  geom_v_vector(color = "#444444") +
  ggtitle(
    "Row-principal PCA biplot of Anderson iris data",
    "Ranges 2 sample standard deviations from centroids"
  )
iris_pca \%>\%
  ggbiplot(aes(color = species)) +
  theme_bw() +
  scale_color_brewer(type = "qual", palette = 2) +
  geom_u_lineranges(
    fun.data = mean_cl_boot, fun.args = list(conf.int = .99),
    size = .75
  ) +
  geom_u_point(alpha = .5) +
  geom_v_vector(color = "#444444") +
  ggtitle(
    "Row-principal PCA biplot of Anderson iris data",
    "99\% confidence intervals based on nonparametric bootstrap sampling"
  )
}
