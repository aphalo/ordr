% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/methods-lm.r
\name{methods-lm}
\alias{methods-lm}
\alias{as_tbl_ord.lm}
\alias{reconstruct.lm}
\alias{recover_u.lm}
\alias{recover_v.lm}
\alias{recover_coord.lm}
\alias{augmentation_u.lm}
\alias{augmentation_v.lm}
\alias{augmentation_coord.lm}
\alias{permute_to.lm}
\alias{augmentation_u.glm}
\alias{recover_u.mlm}
\alias{recover_v.mlm}
\alias{recover_coord.mlm}
\alias{augmentation_u.mlm}
\alias{augmentation_v.mlm}
\alias{augmentation_coord.mlm}
\title{Functionality for linear model objects}
\usage{
\method{as_tbl_ord}{lm}(x)

\method{reconstruct}{lm}(x)

\method{recover_u}{lm}(x)

\method{recover_v}{lm}(x)

\method{recover_coord}{lm}(x)

\method{augmentation_u}{lm}(x)

\method{augmentation_v}{lm}(x)

\method{augmentation_coord}{lm}(x)

\method{permute_to}{lm}(x, y, ..., .matrix)

\method{augmentation_u}{glm}(x)

\method{recover_u}{mlm}(x)

\method{recover_v}{mlm}(x)

\method{recover_coord}{mlm}(x)

\method{augmentation_u}{mlm}(x)

\method{augmentation_v}{mlm}(x)

\method{augmentation_coord}{mlm}(x)
}
\arguments{
\item{x}{An ordination object.}

\item{y}{A matrix or an ordination object.}

\item{...}{Additional elements of a custom \code{tbl_ord}.}

\item{.matrix}{A character string matching one of several indicators for one
or both matrices in a matrix decomposition used for ordination. The
standard values are \code{"u"}, \code{"v"}, and \code{"uv"}.}
}
\description{
These methods extract data from, and attribute new data to,
objects of class \code{"lm"}, \code{"glm"}, and \code{"mlm"} as returned by \code{\link[stats:lm]{stats::lm()}}
and \code{\link[stats:glm]{stats::glm()}}.
}
\examples{

# standardize two predictors
bioenv <- dplyr::mutate(
  bioenv,
  x = (Depth - mean(Depth)) / sd(Depth),
  y = (Pollution - mean(Pollution)) / sd(Pollution)
)

# linear regression setup
(m <- lm(data = bioenv, formula = d ~ x + y))
(b <- as_tbl_ord(m))
(d <- tidy(b))

# standardize the predictors
bioenv_pois <- dplyr::mutate(bioenv, x = scale(Depth), y = scale(Pollution))

# single generalized linear regression setup
(m <- glm(d ~ x + y, "poisson", bioenv_pois))
(b <- as_tbl_ord(m))

# single generalized linear regression biplot
ggbiplot(b, aes(x = x, y = y, label = .name)) +
  theme_bw() +
  geom_u_text(color = "darkgreen") +
  geom_v_vector(color = "brown4") +
  geom_v_text_radiate(color = "brown4")

# reproduce (3.4) and Exhibit 3.6 in Greenacre (2010)

# standardize the predictors and binarize the count responses
bioenv_bin <- dplyr::mutate_at(bioenv, dplyr::vars(a:e), as.logical)
bioenv_bin <- dplyr::mutate(bioenv_bin, x = scale(Depth), y = scale(Pollution))

# multiple generalized linear regression setup
#resp <- as.matrix(dplyr::select(bioenv_std, a:e))
#pred <- as.matrix(dplyr::select(bioenv_std, x = Depth, y = Pollution))
#(m <- glm(resp ~ pred, "binomial"))

# single generalized linear regression setup
(m <- glm(d ~ x + y, "binomial", bioenv_bin))
(b <- as_tbl_ord(m))

# check link function
family(b)$linkfun
family(b)$linkinv
# can/should `family()` be passed through `ggplot()` and on to `geom_*()`?

# single generalized linear regression biplot
# ('intercept' aesthetic is vital for linking GLM parameter to coordinates)
ggbiplot(b, aes(x = x, y = y, intercept = `(Intercept)`, label = .name)) +
  theme_bw() +
  geom_u_text(color = "darkgreen") +
  geom_v_vector(color = "brown4") +
  geom_v_text_radiate(color = "brown4") +
  geom_v_isolines(family = binomial(), by = .05) +
  ylim(c(-2.7, 2.7))
# Regression analysis of Motor Trend design and performance data
mtcars \%>\%
  scale(scale = FALSE) \%>\%
  as.data.frame() \%>\%
  lm(formula = mpg ~ wt + cyl) \%>\%
  as_tbl_ord() \%>\%
  augment() \%>\%
  mutate_u(influence = .wt.res^2) \%>\%
  print() -> mtcars_lm
mtcars_lm \%>\%
  ggbiplot(aes(x = wt, y = cyl)) +
  geom_u_point(aes(color = influence)) +
  geom_v_vector() +
  # weight isolines
  geom_v_isolines(ids = 1, by = 5) +
  ggtitle(
    "Weight isolines with data colored by importance",
    "Regressing mpg onto weight and number of cylinders"
  )
# Multidimensional scaling of country differences and regression of attributes
# Reproduce Exhibit 4.2 in Greenacre (2010)
country_differences \%>\%
  cmdscale(k = 2) \%>\%
  as_tbl_ord() \%>\%
  print() -> differences_cmds
differences_plot <- differences_cmds \%>\%
  ggbiplot(aes(x = 1, y = 2, label = .name)) +
  geom_v_text()
differences_plot
# Reproduce Exhibit 4.5 in Greenacre (2010)
lm(country_attributes ~ get_u(differences_cmds)) \%>\%
  as_tbl_ord() \%>\%
  print() -> attributes_fit
differences_plot +
  geom_v_vector(data = attributes_fit) +
  geom_v_text_radiate(data = attributes_fit, hjust = .3)
# Generalized multiple linear regression on marine ecosystem data
# Reproduce Exhibit 2.5 in Greenacre (2010)
bioenv_std <- dplyr::mutate_if(bioenv, is.numeric, ~ as.vector(scale(.)))
resp_std <- as.matrix(dplyr::select(bioenv_std, a:e))
pred_std <- as.matrix(dplyr::select(bioenv_std, x = Depth, y = Pollution))
lm(resp_std ~ pred_std + 0) \%>\%
  as_tbl_ord() \%>\%
  print() -> bioenv_std_mlm
ggbiplot(bioenv_std_mlm, aes(label = .name)) +
  theme_bw() +
  geom_u_text(color = "darkgreen") +
  geom_v_vector(color = "brown4") +
  geom_v_text_radiate(color = "brown4")
# Reproduce Exhibit 3.2 in Greenacre (2010)
bioenv \%>\%
  dplyr::mutate_at(dplyr::vars(a:e), ~ . ^ (1/4)) \%>\%
  dplyr::mutate_at(dplyr::vars(Pollution:Depth), ~ as.vector(scale(.))) \%>\%
  print() -> bioenv_4rt
resp_4rt <- as.matrix(dplyr::select(bioenv_4rt, a:e))
pred_4rt <- as.matrix(dplyr::select(bioenv_4rt, x = Depth, y = Pollution))
lm(resp_4rt ~ pred_4rt + 0) \%>\%
  as_tbl_ord() \%>\%
  print() -> bioenv_4rt_mlm
ggbiplot(bioenv_4rt_mlm, aes(x = x, y = y, label = .name)) +
  theme_bw() +
  geom_u_text(color = "darkgreen") +
  geom_v_vector(color = "brown4") +
  geom_v_text_radiate(color = "brown4")
}
