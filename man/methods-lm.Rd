% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/methods-lm.r
\name{methods-lm}
\alias{methods-lm}
\alias{as_tbl_ord.lm}
\alias{recover_u.lm}
\alias{recover_v.lm}
\alias{recover_coord.lm}
\alias{augment_u.lm}
\alias{augment_v.lm}
\alias{augment_coord.lm}
\alias{permute_to.lm}
\alias{recover_u.mlm}
\alias{recover_v.mlm}
\alias{recover_coord.mlm}
\alias{augment_u.mlm}
\alias{augment_v.mlm}
\alias{augment_coord.mlm}
\alias{reconstruct.lm}
\title{Functionality for linear model objects}
\usage{
\method{as_tbl_ord}{lm}(x)

\method{recover_u}{lm}(x)

\method{recover_v}{lm}(x)

\method{recover_coord}{lm}(x)

\method{augment_u}{lm}(x)

\method{augment_v}{lm}(x)

\method{augment_coord}{lm}(x)

\method{permute_to}{lm}(x, y, ..., .matrix)

\method{recover_u}{mlm}(x)

\method{recover_v}{mlm}(x)

\method{recover_coord}{mlm}(x)

\method{augment_u}{mlm}(x)

\method{augment_v}{mlm}(x)

\method{augment_coord}{mlm}(x)

\method{reconstruct}{lm}(x)
}
\arguments{
\item{x}{An ordination object.}

\item{y}{A matrix or an ordination object.}

\item{...}{Additional elements of a custom \code{tbl_ord}.}

\item{.matrix}{A character string matching one of several indicators for one
or both matrices in a matrix decomposition used for ordination. The
standard values are \code{"u"}, \code{"v"}, and \code{"uv"}.}
}
\description{
These methods extract data from, and attribute new data to, objects of class
\code{"lm"}, \code{"glm"}, and \code{"mlm"}.
}
\examples{
# reproduce Exhibit 2.3 in Greenacre (2010)

data(bioenv)
# standardize two predictors
bioenv <- dplyr::mutate(
  bioenv,
  x = (Depth - mean(Depth)) / sd(Depth),
  y = (Pollution - mean(Pollution)) / sd(Pollution)
)

# linear regression setup
(m <- lm(data = bioenv, formula = d ~ x + y))
(b <- as_tbl_ord(m))
(d <- tidy(b))

# contributions of predictors to explained variance
print(augment_coord(b))

# basic linear regression biplot
gg <- ggbiplot(b, aes(x = x, y = y))
gg +
  geom_u_point() +
  geom_v_vector()
# same biplot using default matrices for each layer
gg +
  geom_biplot_point() +
  geom_biplot_vector()
# same biplot with isolines for sole axis
gg +
  geom_u_point() +
  geom_v_vector() +
  geom_v_isolines(ids = 1, by = 5)

# shade points by expected species prevalence and darken outliers
ggbiplot(d, aes(x = x, y = y, color = .fitted, alpha = .resid^2)) +
  theme_bw() +
  scale_color_distiller(type = "div", palette = 1) +
  scale_alpha_continuous(range = c(1/3, 1)) +
  geom_u_point() +
  geom_v_vector() +
  geom_v_isolines(ids = 1, by = 5)
}
