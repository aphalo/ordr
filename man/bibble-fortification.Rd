% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fortify-bibble.r
\name{bibble-fortification}
\alias{bibble-fortification}
\alias{fortify.bbl}
\alias{fortify_u}
\alias{fortify_v}
\alias{tidy.bbl}
\title{Fortify a bibble for plotting}
\usage{
\method{fortify}{bbl}(model, data, ..., .matrix = "uv", include = "all")

fortify_u(model, include = "all")

fortify_v(model, include = "all")

\method{tidy}{bbl}(x, ..., .matrix = "uv", include = "all")
}
\arguments{
\item{model, x}{A \link{bibble}, i.e. an ordination object of class 
\code{"bbl"}.}

\item{data}{Ignored.}

\item{...}{Additional arguments received from \code{fortify} or \code{tidy};
ignored.}

\item{.matrix}{A character string matching one of several indicators for one
or both matrices in a matrix decomposition used for ordination. The
standard values are \code{"u"}, \code{"v"}, and \code{"uv"}.}

\item{include}{Character matched to \code{"coordinates"}, \code{"shared"}, or
\code{"all"}; whether the fortified data frame should include only the 
ordination coordinates, also the annotations shared by subjects and 
variables, or all annotations (with \code{NA}s where not defined).}
}
\description{
These methods of \code{\link[ggplot2]{fortify}} and \code{\link[broom]{tidy}}
convert a \code{\link{bibble}} to a \code{\link{tibble}}.
}
\examples{
# reproduce Exhibit 2.3 in Greenacre (2010)

data(bioenv)
# standardize two predictors
bioenv <- dplyr::mutate(
  bioenv,
  x = (Depth - mean(Depth)) / sd(Depth),
  y = (Pollution - mean(Pollution)) / sd(Pollution)
)

# linear regression setup
(m <- lm(data = bioenv, formula = d ~ x + y))
(b <- as_bibble(m))
(d <- tidy(b))

# contributions of predictors to explained variance
print(coord_annot(b))

# basic linear regression biplot
gg <- ggbiplot(b, aes(x = x, y = y))
gg +
  geom_u_point() +
  geom_v_vector()
# same biplot using default matrices for each layer
gg +
  geom_biplot_point() +
  geom_biplot_vector()
# same biplot with isolines for sole axis
gg +
  geom_u_point() +
  geom_v_vector() +
  geom_v_isolines(ids = 1, by = 5)

# shade points by expected species prevalence and darken outliers
ggbiplot(d, aes(x = x, y = y, color = .fitted, alpha = .resid^2)) +
  theme_bw() +
  scale_color_distiller(type = "div", palette = 1) +
  scale_alpha_continuous(range = c(1/3, 1)) +
  geom_u_point() +
  geom_v_vector() +
  geom_v_isolines(ids = 1, by = 5)
}
