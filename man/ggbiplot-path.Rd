% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geom-path.r
\name{ggbiplot-path}
\alias{ggbiplot-path}
\alias{geom_u_path}
\alias{geom_v_path}
\alias{geom_biplot_path}
\title{Render piecewise-linear paths through ordinates}
\usage{
geom_u_path(mapping = NULL, data = NULL, stat = "identity",
  position = "identity", ..., na.rm = FALSE, show.legend = NA,
  inherit.aes = TRUE)

geom_v_path(mapping = NULL, data = NULL, stat = "identity",
  position = "identity", ..., na.rm = FALSE, show.legend = NA,
  inherit.aes = TRUE)

geom_biplot_path(mapping = NULL, data = NULL, stat = "identity",
  position = "identity", .matrix = "u", ..., na.rm = FALSE,
  show.legend = NA, inherit.aes = TRUE)
}
\arguments{
\item{mapping}{Set of aesthetic mappings created by \code{\link[=aes]{aes()}} or
\code{\link[=aes_]{aes_()}}. If specified and \code{inherit.aes = TRUE} (the
default), it is combined with the default mapping at the top level of the
plot. You must supply \code{mapping} if there is no plot mapping.}

\item{data}{The data to be displayed in this layer. There are three
options:

If \code{NULL}, the default, the data is inherited from the plot
data as specified in the call to \code{\link[=ggplot]{ggplot()}}.

A \code{data.frame}, or other object, will override the plot
data. All objects will be fortified to produce a data frame. See
\code{\link[=fortify]{fortify()}} for which variables will be created.

A \code{function} will be called with a single argument,
the plot data. The return value must be a \code{data.frame}, and
will be used as the layer data.}

\item{stat}{The statistical transformation to use on the data for this
layer, as a string.}

\item{position}{Position adjustment, either as a string, or the result of
a call to a position adjustment function.}

\item{...}{Additional arguments passed to \code{\link[ggplot2]{layer}}.}

\item{na.rm}{Passed to \code{\link[ggplot2]{layer}}s.}

\item{show.legend}{logical. Should this layer be included in the legends?
\code{NA}, the default, includes if any aesthetics are mapped.
\code{FALSE} never includes, and \code{TRUE} always includes.
It can also be a named logical vector to finely select the aesthetics to
display.}

\item{inherit.aes}{If \code{FALSE}, overrides the default aesthetics,
rather than combining with them. This is most useful for helper functions
that define both data and aesthetics and shouldn't inherit behaviour from
the default plot specification, e.g. \code{\link[=borders]{borders()}}.}

\item{.matrix}{A character string matching one of several indicators for one
or both matrices in a matrix decomposition used for ordination. The
standard values are \code{"u"}, \code{"v"}, and \code{"uv"}.}
}
\description{
\code{geom_*_path} renders line segments through consecutive pairs of case or
variable positions.
}
\section{Biplot layers}{

\code{\link{ggbiplot}} uses \code{\link[ggplot2]{fortify}} internally to 
produce a single data frame with a \code{.matrix} column distinguishing the 
subjects (\code{"u"}) and variables (\code{"v"}). The stat layers 
\code{stat_u} and \code{stat_v} simply filter the data frame to one of these 
two.

The geom layers \code{geom_u_*} and \code{geom_v_*} call the corresponding
stat in order to render plot elements for the corresponding matrix \eqn{U} or
\eqn{V}. \code{geom_biplot_*} selects a default matrix based on common
practice, e.g. \eqn{U} for points and \eqn{V} for arrows.
}

\section{Aesthetics}{

\code{geom_*_path} understands the following aesthetics (required aesthetics
are in bold):
\itemize{
  \item \strong{\code{x}}
  \item \strong{\code{y}}
  \item \code{alpha}
  \item \code{colour}
  \item \code{linetype}
  \item \code{size}
  \item \code{group}
}
}

\examples{
data(bioenv)

# reproduce Exhibit 2.3 in Greenacre (2010)

# standardize two predictors
bioenv <- dplyr::mutate(
  bioenv,
  x = (Depth - mean(Depth)) / sd(Depth),
  y = (Pollution - mean(Pollution)) / sd(Pollution)
)

# linear regression setup
(m <- lm(data = bioenv, formula = d ~ x + y))
(b <- as_tbl_ord(m))
(d <- tidy(b))

# contributions of predictors to explained variance
print(augmentation_coord(b))

# basic linear regression biplot
gg <- ggbiplot(b, aes(x = x, y = y))
gg +
  geom_u_point() +
  geom_v_vector()
# same biplot using default matrices for each layer
gg +
  geom_biplot_point() +
  geom_biplot_vector()
# same biplot with tick marks for sole axis
gg +
  geom_u_point() +
  geom_v_vector() +
  geom_v_ticks(ids = 1, by = 5)
# same biplot with isolines for sole axis
gg +
  geom_u_point() +
  geom_v_vector() +
  geom_v_isolines(ids = 1, by = 5)

# shade points by expected species prevalence and darken outliers
ggbiplot(d, aes(x = x, y = y, color = .fit, alpha = .wt.res ^ 2)) +
  theme_bw() +
  scale_color_distiller(type = "div", palette = 1) +
  scale_alpha_continuous(range = c(1/3, 1)) +
  geom_u_point() +
  geom_v_vector() +
  geom_v_isolines(ids = 1, by = 5)
}
