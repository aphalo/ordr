% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geom-axis-labels.r
\docType{data}
\name{geom-biplot-ticks}
\alias{geom-biplot-ticks}
\alias{GeomAxisText}
\alias{geom_axis_text}
\alias{geom_u_axis_text}
\alias{geom_v_axis_text}
\alias{geom_biplot_axis_text}
\title{Render tick mark labels for axes}
\format{An object of class \code{GeomAxisText} (inherits from \code{GeomText}, \code{Geom}, \code{ggproto}, \code{gg}) of length 4.}
\usage{
geom_axis_text(mapping = NULL, data = NULL, stat = "identity",
  position = "identity", axes = NULL, calibrate = FALSE,
  family_fun = NULL, by = NULL, label_dodge = 0.025, ...,
  parse = FALSE, check_overlap = FALSE, na.rm = FALSE,
  show.legend = NA, inherit.aes = TRUE)

geom_u_axis_text(mapping = NULL, data = NULL, stat = "identity",
  position = "identity", axes = NULL, calibrate = FALSE,
  family_fun = NULL, by = NULL, label_dodge = 0.025, ...,
  parse = FALSE, check_overlap = FALSE, na.rm = FALSE,
  show.legend = NA, inherit.aes = TRUE)

geom_v_axis_text(mapping = NULL, data = NULL, stat = "identity",
  position = "identity", axes = NULL, calibrate = FALSE,
  family_fun = NULL, by = NULL, label_dodge = 0.025, ...,
  parse = FALSE, check_overlap = FALSE, na.rm = FALSE,
  show.legend = NA, inherit.aes = TRUE)

geom_biplot_axis_text(mapping = NULL, data = NULL, stat = "identity",
  position = "identity", .matrix = "v", axes = NULL,
  calibrate = FALSE, family_fun = NULL, by = NULL,
  label_dodge = 0.025, ..., parse = FALSE, check_overlap = FALSE,
  na.rm = FALSE, show.legend = NA, inherit.aes = TRUE)
}
\arguments{
\item{mapping}{Set of aesthetic mappings created by \code{\link[=aes]{aes()}} or
\code{\link[=aes_]{aes_()}}. If specified and \code{inherit.aes = TRUE} (the
default), it is combined with the default mapping at the top level of the
plot. You must supply \code{mapping} if there is no plot mapping.}

\item{data}{The data to be displayed in this layer. There are three
options:

If \code{NULL}, the default, the data is inherited from the plot
data as specified in the call to \code{\link[=ggplot]{ggplot()}}.

A \code{data.frame}, or other object, will override the plot
data. All objects will be fortified to produce a data frame. See
\code{\link[=fortify]{fortify()}} for which variables will be created.

A \code{function} will be called with a single argument,
the plot data. The return value must be a \code{data.frame}, and
will be used as the layer data. A \code{function} can be created
from a \code{formula} (e.g. \code{~ head(.x, 10)}).}

\item{stat}{The statistical transformation to use on the data for this
layer, as a string.}

\item{position}{Position adjustment, either as a string, or the result of
a call to a position adjustment function.}

\item{axes}{Indices of axes for which to render elements.}

\item{calibrate}{Logical; whether to calibrate axis scales for inner product
interpretability.}

\item{family_fun}{A family function, or a character string naming one, to
transform the values along the axis at which to render elements.}

\item{by}{Interval length between elements, in the units of the ordination.}

\item{label_dodge}{Numeric; the orthogonal distance of the text from
the axis, as a proportion of the minimum of the plot width and height.}

\item{...}{Additional arguments passed to \code{\link[ggplot2:layer]{ggplot2::layer()}}.}

\item{parse}{If \code{TRUE}, the labels will be parsed into expressions and
displayed as described in \code{?plotmath}.}

\item{check_overlap}{If \code{TRUE}, text that overlaps previous text in the
same layer will not be plotted.}

\item{na.rm}{Passed to \code{\link[ggplot2:layer]{ggplot2::layer()}}.}

\item{show.legend}{logical. Should this layer be included in the legends?
\code{NA}, the default, includes if any aesthetics are mapped.
\code{FALSE} never includes, and \code{TRUE} always includes.
It can also be a named logical vector to finely select the aesthetics to
display.}

\item{inherit.aes}{If \code{FALSE}, overrides the default aesthetics,
rather than combining with them. This is most useful for helper functions
that define both data and aesthetics and shouldn't inherit behaviour from
the default plot specification, e.g. \code{\link[=borders]{borders()}}.}

\item{.matrix}{A character string matching one of several indicators for one
or both matrices in a matrix decomposition used for ordination. The
standard values are \code{"u"}, \code{"v"}, and \code{"uv"}.}
}
\description{
\code{geom_*_axis_text()} renders tick mark labels for specified
axes among the row or column factors.
}
\section{Biplot layers}{

\code{\link[=ggbiplot]{ggbiplot()}} uses \code{\link[ggplot2:fortify]{ggplot2::fortify()}} internally to produce a single data
frame with a \code{.matrix} column distinguishing the subjects (\code{"u"}) and
variables (\code{"v"}). The stat layers \code{stat_u()} and \code{stat_v()} simply filter
the data frame to one of these two.

The geom layers \code{geom_u_*()} and \code{geom_v_*()} call the corresponding stat in
order to render plot elements for the corresponding matrix \eqn{U} or
\eqn{V}. \code{geom_biplot_*()} selects a default matrix based on common practice,
e.g. \eqn{U} for points and \eqn{V} for arrows.
}

\section{Aesthetics}{

\code{geom_*_axis_text()} understands the following aesthetics
(required aesthetics are in bold):
\itemize{
\item \strong{\code{x}}
\item \strong{\code{y}}
\item \code{alpha}
\item \code{angle}
\item \code{colour}
\item \code{family}
\item \code{fontface}
\item \code{hjust}
\item \code{lineheight}
\item \code{size}
\item \code{vjust}
\item \code{group}
}
}

\examples{
# Linear discriminant analysis of Reaven & Miller diabetes data
head(heplots::Diabetes)
diabetes_lda <- MASS::lda(group ~ ., heplots::Diabetes)
print(diabetes_lda)
as_tbl_ord(diabetes_lda) \%>\%
  augment() \%>\%
  mutate_u(discriminant = ifelse(! .supplement, "centroid", "case")) \%>\%
  print() -> diabetes_lda
ggbiplot(diabetes_lda) +
  theme_bw() +
  geom_u_point(aes(shape = .grouping, size = discriminant), alpha = .5) +
  geom_v_axis(color = "#888888") +
  ggtitle("Column-standardized LDA biplot of Reaven & Miller diabetes data")
diabetes_lda \%>\%
  confer_inertia("symmetric") \%>\%
  ggbiplot(.supplement = FALSE) +
  theme_bw() +
  geom_u_point(aes(shape = .grouping)) +
  geom_v_axis(color = "#888888") +
  geom_v_axis_ticks() +
  geom_v_axis_text(size = 2.5, label_dodge = .025) +
  ggtitle("Symmetric LDA biplot of Reaven & Miller diabetes data")
}
\keyword{datasets}
