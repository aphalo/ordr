% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geom-text.r
\name{ggbiplot-text}
\alias{ggbiplot-text}
\alias{geom_u_text}
\alias{geom_v_text}
\alias{geom_biplot_text}
\alias{geom_u_label}
\alias{geom_v_label}
\alias{geom_biplot_label}
\alias{geom_u_text_repel}
\alias{geom_v_text_repel}
\alias{geom_biplot_text_repel}
\alias{geom_u_label_repel}
\alias{geom_v_label_repel}
\alias{geom_biplot_label_repel}
\title{Render text at ordinates}
\usage{
geom_u_text(mapping = NULL, data = NULL, stat = "identity",
  position = "identity", ..., parse = FALSE, nudge_x = 0,
  nudge_y = 0, check_overlap = FALSE, na.rm = FALSE,
  show.legend = NA, inherit.aes = TRUE)

geom_v_text(mapping = NULL, data = NULL, stat = "identity",
  position = "identity", ..., parse = FALSE, nudge_x = 0,
  nudge_y = 0, check_overlap = FALSE, na.rm = FALSE,
  show.legend = NA, inherit.aes = TRUE)

geom_biplot_text(mapping = NULL, data = NULL, stat = "identity",
  position = "identity", .matrix = "u", ..., parse = FALSE,
  nudge_x = 0, nudge_y = 0, check_overlap = FALSE, na.rm = FALSE,
  show.legend = NA, inherit.aes = TRUE)

geom_u_label(mapping = NULL, data = NULL, stat = "identity",
  position = "identity", ..., parse = FALSE, na.rm = FALSE,
  show.legend = NA, inherit.aes = TRUE)

geom_v_label(mapping = NULL, data = NULL, stat = "identity",
  position = "identity", ..., parse = FALSE, na.rm = FALSE,
  show.legend = NA, inherit.aes = TRUE)

geom_biplot_label(mapping = NULL, data = NULL, stat = "identity",
  position = "identity", .matrix = "u", ..., parse = FALSE,
  na.rm = FALSE, show.legend = NA, inherit.aes = TRUE)

geom_u_text_repel(mapping = NULL, data = NULL, stat = "identity",
  position = "identity", ..., parse = FALSE, na.rm = FALSE,
  show.legend = NA, inherit.aes = TRUE)

geom_v_text_repel(mapping = NULL, data = NULL, stat = "identity",
  position = "identity", ..., parse = FALSE, na.rm = FALSE,
  show.legend = NA, inherit.aes = TRUE)

geom_biplot_text_repel(mapping = NULL, data = NULL,
  stat = "identity", position = "identity", .matrix = "u", ...,
  parse = FALSE, na.rm = FALSE, show.legend = NA,
  inherit.aes = TRUE)

geom_u_label_repel(mapping = NULL, data = NULL, stat = "identity",
  position = "identity", ..., parse = FALSE, na.rm = FALSE,
  show.legend = NA, inherit.aes = TRUE)

geom_v_label_repel(mapping = NULL, data = NULL, stat = "identity",
  position = "identity", ..., parse = FALSE, na.rm = FALSE,
  show.legend = NA, inherit.aes = TRUE)

geom_biplot_label_repel(mapping = NULL, data = NULL,
  stat = "identity", position = "identity", .matrix = "u", ...,
  parse = FALSE, na.rm = FALSE, show.legend = NA,
  inherit.aes = TRUE)
}
\arguments{
\item{mapping}{Set of aesthetic mappings created by \code{\link[=aes]{aes()}} or
\code{\link[=aes_]{aes_()}}. If specified and \code{inherit.aes = TRUE} (the
default), it is combined with the default mapping at the top level of the
plot. You must supply \code{mapping} if there is no plot mapping.}

\item{data}{The data to be displayed in this layer. There are three
options:

If \code{NULL}, the default, the data is inherited from the plot
data as specified in the call to \code{\link[=ggplot]{ggplot()}}.

A \code{data.frame}, or other object, will override the plot
data. All objects will be fortified to produce a data frame. See
\code{\link[=fortify]{fortify()}} for which variables will be created.

A \code{function} will be called with a single argument,
the plot data. The return value must be a \code{data.frame}, and
will be used as the layer data.}

\item{stat}{The statistical transformation to use on the data for this
layer, as a string.}

\item{position}{Position adjustment, either as a string, or the result of
a call to a position adjustment function.}

\item{...}{Additional arguments passed to \code{\link[ggplot2:layer]{ggplot2::layer()}}.}

\item{parse, check_overlap, nudge_x, nudge_y}{See \code{\link[ggplot2:geom_text]{ggplot2::geom_text()}}.}

\item{na.rm}{Passed to \code{\link[ggplot2:layer]{ggplot2::layer()}}.}

\item{show.legend}{logical. Should this layer be included in the legends?
\code{NA}, the default, includes if any aesthetics are mapped.
\code{FALSE} never includes, and \code{TRUE} always includes.
It can also be a named logical vector to finely select the aesthetics to
display.}

\item{inherit.aes}{If \code{FALSE}, overrides the default aesthetics,
rather than combining with them. This is most useful for helper functions
that define both data and aesthetics and shouldn't inherit behaviour from
the default plot specification, e.g. \code{\link[=borders]{borders()}}.}

\item{.matrix}{A character string matching one of several indicators for one
or both matrices in a matrix decomposition used for ordination. The
standard values are \code{"u"}, \code{"v"}, and \code{"uv"}.}
}
\description{
\code{geom_*_text()} renders text, and \code{geom_*_label()} labels, at
the positions of the subjects or vectors. \code{geom_*_text_repel()} and
\code{geom_*_label_repel()} invoke functionality from the
\strong{\link[ggrepel:ggrepel]{ggrepel}} package.
}
\section{Biplot layers}{

\code{\link[=ggbiplot]{ggbiplot()}} uses \code{\link[ggplot2:fortify]{ggplot2::fortify()}} internally to produce a single data
frame with a \code{.matrix} column distinguishing the subjects (\code{"u"}) and
variables (\code{"v"}). The stat layers \code{stat_u()} and \code{stat_v()} simply filter
the data frame to one of these two.

The geom layers \code{geom_u_*()} and \code{geom_v_*()} call the corresponding stat in
order to render plot elements for the corresponding matrix \eqn{U} or
\eqn{V}. \code{geom_biplot_*()} selects a default matrix based on common practice,
e.g. \eqn{U} for points and \eqn{V} for arrows.
}

\section{Aesthetics}{

\code{geom_*_text()}, \code{geom_*_label()}, \code{geom_*_text_repel()}, and
\code{geom_*_label_repel()} understand the following aesthetics (required
aesthetics are in bold):
\itemize{
\item \strong{\code{x}}
\item \strong{\code{y}}
\item \strong{\code{label}}
\item \code{alpha}
\item \code{angle}
\item \code{colour}
\item \code{family}
\item \code{fontface}
\item \code{hjust}
\item \code{lineheight}
\item \code{size}
\item \code{vjust}
\item \code{group}
}
}

\examples{
# Correspondence analysis of Sanderson finches data
finches \%>\%
  ca::ca() \%>\%
  as_tbl_ord() \%>\%
  confer_inertia(.5) \%>\%
  augment() \%>\%
  print() -> finches_ca
finches_ca \%>\%
  ggbiplot(aes(label = .name)) +
  geom_u_text(aes(alpha = .inertia), color = "royalblue3") +
  geom_v_text(aes(alpha = .inertia), color = "darkred") +
  scale_alpha_continuous(range = c(.3, 1), guide = "none") +
  ggtitle(
    "Symmetric CA biplot of the Galapagos island finches",
    "Label opacity encodes row/column inertia"
  )
# Confer PCA weights and inertia between cases and variables
country_attributes \%>\%
  prcomp() \%>\%
  as_tbl_ord() \%>\%
  print() -> attributes_pca
# form biplot
attributes_pca \%>\%
  ggbiplot(
    aes(label = .name),
    sec.axes = "v", scale.factor = dim_v(attributes_pca)
  ) +
  theme_bw() + theme(panel.grid = element_blank()) +
  geom_u_text(aes(x = PC1, y = PC2), color = "seagreen") +
  geom_v_vector(aes(x = PC1, y = PC2), color = "darkred") +
  geom_v_text_repel(aes(x = PC1, y = PC2), color = "darkred")
# covariance biplot
attributes_pca \%>\%
  confer_inertia(0) \%>\%
  ggbiplot(
    aes(label = .name),
    sec.axes = "u", scale.factor = dim_u(attributes_pca)
  ) +
  theme_bw() + theme(panel.grid = element_blank()) +
  geom_u_text(aes(x = PC1, y = PC2), color = "seagreen") +
  geom_v_vector(aes(x = PC1, y = PC2), color = "darkred") +
  geom_v_text_repel(aes(x = PC1, y = PC2), color = "darkred")
# Confer inertia in CA between rows and columns of benthic sample data
benthos \%>\%
  ca::ca() \%>\%
  as_tbl_ord() \%>\%
  print() -> benthos_ca
# Reproduce Exhibit 8.3
benthos_ca \%>\%
  confer_inertia("colprincipal") \%>\%
  ggbiplot(aes(label = .name)) +
  theme_bw() +
  geom_u_point(color = "brown", size = 1) +
  geom_v_text(color = "darkgreen")
# Reproduce Exhibit 8.4
benthos_ca \%>\%
  augment(.matrix = "u") \%>\%
  transmute_u(mass = .mass, sqrt_mass = sqrt(.mass)) \%>\%
  confer_inertia("colprincipal") \%>\%
  ggbiplot(aes(label = .name), scale_u = "sqrt_mass") +
  theme_bw() +
  geom_u_vector(color = "brown", arrow = NULL) +
  geom_u_point(aes(size = mass), color = "brown", shape = 17) +
  scale_size_continuous(range = c(1, 4), guide = "none") +
  geom_u_text(stat = "chull", color = "brown", nudge_x = .075, nudge_y = .05) +
  geom_v_point(color = "darkgreen") +
  geom_v_text_repel(color = "darkgreen", min.segment.length = 2)
}
